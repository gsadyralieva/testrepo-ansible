image: ubuntu

environment:
  global:
    VAGRANT_URL: https://releases.hashicorp.com/vagrant/2.0.3/vagrant_2.0.3_x86_64.deb
    ANSIBLE_PLAYBOOK: >
      - hosts: all
        roles:
        - { role: "." }

  matrix:
    - VAGRANT_BOX: peru/ubuntu-16.04-server-amd64
      VAGRANT_HOSTNAME: ubuntu-1604
    - VAGRANT_BOX: peru/ubuntu-14.04-server-amd64
      VAGRANT_HOSTNAME: ubuntu-1404
    - VAGRANT_BOX: centos/7
      VAGRANT_HOSTNAME: centos-7
    - VAGRANT_BOX: centos/6
      VAGRANT_HOSTNAME: centos-6

install:
- |-
  sudo -i -- << EOF
  set -eux
  apt-get update -qq
  apt-get install -qq -y gcc libvirt-bin libvirt-dev qemu-system-x86 qemu-utils
  wget -q -P /tmp/ $VAGRANT_URL
  apt-get install -qq /tmp/vagrant*.deb
  rm /tmp/vagrant*.deb
  vagrant plugin install vagrant-hostmanager
  vagrant plugin install vagrant-libvirt
  install -m 0700 -d /root/.ssh
  ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
  pip install ansible
  EOF
build_script:
- |-
  sudo -i -- << EOF
  set -eux
  echo $ANSIBLE_PLAYBOOK
  virsh pool-define /dev/stdin <<EOF2
  <pool type='dir'>
    <name>default</name>
    <target>
      <path>/var/lib/libvirt/images</path>
    </target>
  </pool>
  EOF2
  virsh pool-start default
  virsh pool-autostart default
  virsh pool-list
  sudo find /var/lib/libvirt -ls
  sudo find /etc/libvirt -ls
  cd $APPVEYOR_BUILD_FOLDER
  VAGRANT_DEFAULT_PROVIDER=libvirt vagrant up
  cat >> /tmp/ansible_playbook.yml << EOF2
  - hosts: all
    roles:
      - { role: "." }
  EOF2
  ansible -i "$VAGRANT_HOSTNAME," /tmp/ansible_playbook.yml  all
  vagrant destroy -f
  EOF
